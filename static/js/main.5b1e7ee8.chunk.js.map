{"version":3,"sources":["components/views/NavBar/NavBar.js","utils/wetherURL.js","utils/formatDateTime.js","utils/weatherUtils.js","utils/usePromise.js","components/views/ShortFcstPage/ShortFcstItem.js","components/views/ShortFcstPage/ShortFcstPage.js","components/views/VilageFcstPage/VilageFcstItem.js","components/views/VilageFcstPage/VilageFcstList.js","components/views/VilageFcstPage/VilageFcstPage.js","components/views/NoMatch/NoMatch.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBarBlock","styled","div","NavBar","exact","to","className","activeClassName","getWetherURL","getapi","numOfRows","pageNo","base_date","base_time","nx","ny","getFormatDate","date","hh","getHours","getMinutes","setDate","getDate","yyyy","getFullYear","toString","MM","getMonth","dd","matchTimeAndCategory","item","time","category","find","element","fcstTime","fcstValue","matchTimeDateAndCategory","fcstDate","matchIcon","pty","sky","usePromise","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","result","ShortFcstItemBlock","ShortFcstItem","t1h","reh","rn1","Number","src","substr","alt","getPrecipitation","ShortFcstPageBlock","ShortFcstPage","axios","get","Date","mm","setHours","getSeconds","getShortFcstTime","response","console","log","map","e","Set","shift","getShortFcstTimeField","data","body","items","key","VilageFcstItemBlock","VilageFcstItem","t3h","pop","VilageFcstListBlock","VilageFcstList","match","fcstField","params","filter","VilageFcstNavBar","VilageFcstPage","getVilageFcstTime","Object","keys","k","join","this","create","getVilageFcstField","pageDate","getVilageFcstPageDate","path","component","NoMatch","FooterBlock","Footer","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5b1e7ee8.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst NavBarBlock = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  padding: 3rem 0rem;\n  .btn {\n    background-color: white;\n    border-radius: 50px;\n    border: 2px solid #2e7eff;\n    color: #2e7eff;\n    text-decoration: none;\n    padding: 0.7rem 0.5rem;\n    width: 6rem;\n    font-weight: 700;\n  }\n  .btn.active,\n  .btn:active {\n    background-color: #2e7eff;\n    color: white;\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <NavBarBlock>\n      <NavLink exact to=\"/\" className=\"btn\" activeClassName=\"active\">\n        단기 예보\n      </NavLink>\n      <NavLink to=\"/vilage-fcst\" className=\"btn\" activeClassName=\"active\">\n        동네 예보\n      </NavLink>\n    </NavBarBlock>\n  );\n};\n\nexport default NavBar;\n","export const shortNcst = \"getUltraSrtNcst\"; // 초단기실황조회\nexport const shortFcst = \"getUltraSrtFcst\"; // 초단기예보조회\nexport const vilageFcst = \"getVilageFcst\"; // 동네예보조회\n\nconst key =\n  \"u%2FIOb5aDaOO7kHZB1raxzol%2Fcgb8GXAl%2FuDhRTLi6Sq8EXweb8fGwDdN1Pep8DzWSn4gMvpxr4wR7zUbCFDf8w%3D%3D\";\n\nconst getWetherURL = (\n  getapi,\n  numOfRows,\n  pageNo,\n  base_date,\n  base_time,\n  nx,\n  ny\n) => {\n  return `/${getapi}?serviceKey=${key}&dataType=JSON&numOfRows=${numOfRows}&pageNo=${pageNo}&base_date=${base_date}&base_time=${base_time}&nx=${nx}&ny=${ny}`;\n};\n\nexport default getWetherURL;\n","export function getFormatDate(date) {\n  let hh = date.getHours();\n  let mm = date.getMinutes();\n  if (mm < 30 && !hh) {\n    date.setDate(date.getDate() - 1);\n  }\n\n  let yyyy = date.getFullYear().toString();\n  let MM = (date.getMonth() + 1).toString();\n  let dd = date.getDate().toString();\n\n  return yyyy + (MM[1] ? MM : \"0\" + MM[0]) + (dd[1] ? dd : \"0\" + dd[0]);\n}\n\nexport function getShortFcstTime(date) {\n  let mm = date.getMinutes();\n  if (mm < 30) {\n    date.setHours(date.getHours() - 1);\n    mm = 59;\n  }\n  let hh = date.getHours();\n  hh = hh.toString();\n  mm = mm.toString();\n  let ss = date.getSeconds().toString();\n  return (\n    (hh[1] ? hh : \"0\" + hh[0]) +\n    // \":\" +\n    (mm[1] ? mm : \"0\" + mm[0])\n    // + \":\" +\n    // (ss[1] ? ss : \"0\" + ss[0])\n  );\n}\n\nexport function getVilageFcstTime(date) {\n  let mm = date.getMinutes();\n  if (mm < 10) {\n    date.setHours(date.getHours() - 1);\n  }\n  let hh = date.getHours();\n  if (hh === 23 || hh < 2) {\n    return \"2300\";\n  } else if (hh < 5) {\n    return \"0200\";\n  } else if (hh < 8) {\n    return \"0500\";\n  } else if (hh < 11) {\n    return \"0800\";\n  } else if (hh < 14) {\n    return \"1100\";\n  } else if (hh < 17) {\n    return \"1400\";\n  } else if (hh < 20) {\n    return \"1700\";\n  } else {\n    return \"2000\";\n  }\n}\n","// 단기 예보 시간 필드\nexport const getShortFcstTimeField = (item) => {\n  let fcstTime = item.map((e) => e.fcstTime);\n  fcstTime = [...new Set(fcstTime)];\n  if (new Date().getMinutes() < 30) {\n    fcstTime.shift();\n  }\n  return fcstTime;\n};\n\n// 동네 예보 시간, 날짜 필드\nexport const getVilageFcstField = (item) => {\n  let fcstField = item.map(({ fcstTime, fcstDate }) => ({\n    fcstTime,\n    fcstDate,\n  }));\n\n  fcstField = fcstField.filter(function (a) {\n    var key = Object.keys(a)\n      .map(function (k) {\n        return a[k];\n      })\n      .join(\"|\");\n    if (!this[key]) {\n      return (this[key] = true);\n    }\n  }, Object.create(null));\n\n  return fcstField;\n};\n\n// 동네 예보에서 페이징 할 날짜\nexport const getVilageFcstPageDate = (item) => {\n  let fcstDate = item.map((e) => e.fcstDate);\n  fcstDate = [...new Set(fcstDate)];\n  return fcstDate;\n};\n\n// response에서 해당 시간의 카테고리 값\nexport const matchTimeAndCategory = (item, time, category) => {\n  return item.find(\n    (element) => element.fcstTime === time && element.category === category\n  ).fcstValue;\n};\n\nexport const matchTimeDateAndCategory = (item, time, date, category) => {\n  return item.find(\n    (element) =>\n      element.fcstTime === time &&\n      element.fcstDate === date &&\n      element.category === category\n  ).fcstValue;\n};\n\n// 강수형태(PTY)와 하늘 상태(SKY)를 합친 날씨 상태값\nexport const matchIcon = (pty, sky) => {\n  switch (pty) {\n    case \"0\":\n      switch (sky) {\n        case \"1\":\n          return \"sunny\";\n        case \"3\":\n          return \"cloudy\";\n        case \"4\":\n          return \"blur\";\n        default:\n          return \"unknown\";\n      }\n    case \"1\":\n      return \"rainy\";\n    case \"2\":\n      return \"sleet\";\n    case \"3\":\n      return \"snow\";\n    case \"4\":\n      return \"shower\";\n    default:\n      return \"unknown\";\n  }\n};\n\n// (1시간) 강수량\nexport const getPrecipitation = (rn1) => {\n  if (rn1 === 0) {\n    return \"0mm\";\n  } else if (rn1 < 1) {\n    return \"0~1mm\";\n  } else if (rn1 < 5) {\n    return \"1~4mm\";\n  } else if (rn1 < 10) {\n    return \"5~9mm\";\n  } else if (rn1 < 20) {\n    return \"10~19mm\";\n  } else if (rn1 < 40) {\n    return \"20~39mm\";\n  } else if (rn1 < 70) {\n    return \"40~69mm\";\n  } else {\n    return \"70mm~\";\n  }\n};\n","import { useState, useEffect } from \"react\";\n\nconst usePromise = (promiseCreator, deps) => {\n  const [loading, setLoading] = useState(false);\n  const [resolved, setResolved] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const result = await promiseCreator();\n        setResolved(result);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    })();\n  }, deps);\n  return [loading, resolved, error];\n};\n\nexport default usePromise;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { matchIcon } from \"utils/weatherUtils\";\nimport { getPrecipitation } from \"utils/weatherUtils\";\n\nconst ShortFcstItemBlock = styled.div`\n  width: 13rem;\n  border-radius: 1rem;\n  padding: 2rem 0.5rem;\n  box-shadow: 5px 5px 18px #b8b8b8;\n  background-color: white;\n  margin: 3rem 1rem;\n  .time {\n    font-size: 2rem;\n  }\n  p {\n    margin: 0 auto;\n  }\n  img {\n    margin: 2rem 0rem;\n  }\n  .option {\n    display: flex;\n    justify-content: space-evenly;\n    margin-top: 1rem;\n    p {\n      font-weight: 700;\n    }\n  }\n`;\n\nconst ShortFcstItem = ({ time, date, t1h, reh, rn1, sky, pty }) => {\n  time = Number(time) ? Number(time) - 1 : 23;\n  const src = \"/icon/\" + matchIcon(pty, sky) + \".png\";\n  return (\n    <ShortFcstItemBlock>\n      <p>\n        {date.substr(0, 2)}월 {date.substr(2, 2)}일\n      </p>\n      <p className=\"time\">{time}시</p>\n      <img src={src} alt=\"icon\" />\n      <div className=\"option\">\n        <div>\n          <p>기온</p>\n          {t1h}°C\n        </div>\n        <div>\n          <p>습도</p>\n          {reh}%\n        </div>\n        <div>\n          <p>강수량</p>\n          {getPrecipitation(rn1)}\n        </div>\n      </div>\n    </ShortFcstItemBlock>\n  );\n};\n\nexport default ShortFcstItem;\n","import React from \"react\";\nimport axios from \"axios\";\nimport getWetherURL, { shortFcst } from \"utils/wetherURL\";\nimport { getFormatDate, getShortFcstTime } from \"utils/formatDateTime\";\nimport {\n  getShortFcstTimeField,\n  matchTimeAndCategory,\n} from \"utils/weatherUtils\";\nimport usePromise from \"utils/usePromise\";\nimport ShortFcstItem from \"./ShortFcstItem\";\nimport styled from \"styled-components\";\n\nconst ShortFcstPageBlock = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  align-content: space-evenly;\n`;\n\nconst ShortFcstPage = () => {\n  let item = {};\n  let fcstTime = [];\n  const [loading, response, error] = usePromise(() => {\n    return axios.get(\n      getWetherURL(\n        shortFcst,\n        \"100\",\n        \"1\",\n        getFormatDate(new Date()),\n        getShortFcstTime(new Date()),\n        \"97\",\n        \"77\"\n      )\n    );\n  }, []);\n\n  if (loading) {\n    return <div>로딩중 . . .</div>;\n  }\n  if (error) {\n    console.log(error);\n    return <div>error</div>;\n  }\n  if (!response) {\n    return null;\n  }\n\n  item = response.data.response.body.items.item;\n  fcstTime = getShortFcstTimeField(item);\n\n  return (\n    <ShortFcstPageBlock>\n      {fcstTime.map((time) => {\n        // 예보 날짜\n        const date = item.find((element) => element.fcstTime === time).fcstDate;\n        // 기온\n        const t1h = matchTimeAndCategory(item, time, \"T1H\");\n        // 습도\n        const reh = matchTimeAndCategory(item, time, \"REH\");\n        // 1시간 강수량\n        const rn1 = matchTimeAndCategory(item, time, \"RN1\");\n        // 하늘 상태\n        const sky = matchTimeAndCategory(item, time, \"SKY\");\n        // 강수 형태\n        const pty = matchTimeAndCategory(item, time, \"PTY\");\n\n        return (\n          <ShortFcstItem\n            key={time}\n            time={time.substr(0, 2)}\n            date={date.substr(4, 4)}\n            t1h={t1h}\n            reh={reh}\n            rn1={rn1}\n            sky={sky}\n            pty={pty}\n          />\n        );\n      })}\n    </ShortFcstPageBlock>\n  );\n};\n\nexport default ShortFcstPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { matchIcon } from \"utils/weatherUtils\";\n\nconst VilageFcstItemBlock = styled.div`\n  width: 30rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  border-radius: 1rem;\n  box-shadow: 5px 5px 18px #b8b8b8;\n  background-color: white;\n\n  padding: 0.5rem 5rem;\n  margin: 1rem;\n  p {\n    margin: 1;\n  }\n  .time {\n    font-size: 2rem;\n    font-weight: 700;\n    float: left;\n  }\n  img {\n    margin: 2rem;\n  }\n  .option {\n    font-size: 1.2rem;\n    display: flex;\n    justify-content: space-evenly;\n    margin-bottom: 1.5rem;\n    p {\n      font-weight: 700;\n    }\n    div {\n      margin: 0 1rem;\n    }\n  }\n`;\n\nconst VilageFcstItem = ({ time, t3h, reh, pop, sky, pty }) => {\n  const src = \"/icon/\" + matchIcon(pty, sky) + \".png\";\n  return (\n    <VilageFcstItemBlock>\n      <p className=\"time\">{time}시</p>\n      <img src={src} alt=\"icon\" />\n      <div className=\"option\">\n        <div>\n          <p>기온</p>\n          {t3h}°C\n        </div>\n        <div>\n          <p>습도</p>\n          {reh}%\n        </div>\n        <div>\n          <p>강수확률</p>\n          {pop}%\n        </div>\n      </div>\n    </VilageFcstItemBlock>\n  );\n};\n\nexport default VilageFcstItem;\n","import React from \"react\";\nimport { matchTimeDateAndCategory } from \"utils/weatherUtils\";\nimport VilageFcstItem from \"./VilageFcstItem\";\nimport styled from \"styled-components\";\n\nconst VilageFcstListBlock = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n`;\n\nconst VilageFcstList = ({ match, fcstField, item }) => {\n  const fcstDate = match.params.date;\n  const fcstTime = fcstField.filter((date) => {\n    return fcstDate === date.fcstDate;\n  });\n\n  return (\n    <VilageFcstListBlock>\n      {fcstTime.map(({ fcstTime }) => {\n        // 예보 시간\n        const time = fcstTime;\n        // 3시간 기온\n        const t3h = matchTimeDateAndCategory(item, fcstTime, fcstDate, \"T3H\");\n        // 습도\n        const reh = matchTimeDateAndCategory(item, fcstTime, fcstDate, \"REH\");\n        // 강수 확률\n        const pop = matchTimeDateAndCategory(item, fcstTime, fcstDate, \"POP\");\n        // 하늘 상태\n        const sky = matchTimeDateAndCategory(item, fcstTime, fcstDate, \"SKY\");\n        // 강수 형태\n        const pty = matchTimeDateAndCategory(item, fcstTime, fcstDate, \"PTY\");\n\n        return (\n          <VilageFcstItem\n            key={time}\n            time={time.substr(0, 2)}\n            t3h={t3h}\n            reh={reh}\n            pop={pop}\n            sky={sky}\n            pty={pty}\n          />\n        );\n      })}\n    </VilageFcstListBlock>\n  );\n};\n\nexport default VilageFcstList;\n","import React from \"react\";\nimport axios from \"axios\";\nimport getWetherURL, { vilageFcst } from \"utils/wetherURL\";\nimport { getFormatDate, getVilageFcstTime } from \"utils/formatDateTime\";\nimport { getVilageFcstField, getVilageFcstPageDate } from \"utils/weatherUtils\";\nimport usePromise from \"utils/usePromise\";\nimport styled from \"styled-components\";\nimport { Link, Route } from \"react-router-dom\";\nimport VilageFcstList from \"./VilageFcstList\";\n\nconst VilageFcstNavBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n  width: 30rem;\n  font-weight: 700;\n  margin-bottom: 3rem;\n\n  .link {\n    text-decoration: none;\n    color: black;\n    &.active {\n      color: #2e7eff;\n    }\n  }\n`;\n\nconst VilageFcstPage = () => {\n  const fcstTime = [];\n  const [loading, response, error] = usePromise(() => {\n    return axios.get(\n      getWetherURL(\n        vilageFcst,\n        \"200\",\n        \"1\",\n        getFormatDate(new Date()),\n        getVilageFcstTime(new Date()),\n        \"97\",\n        \"77\"\n      )\n    );\n  }, []);\n\n  if (loading) {\n    return <div>로딩중 . . .</div>;\n  }\n  if (error) {\n    console.log(error);\n    return <div>error</div>;\n  }\n  if (!response) {\n    return null;\n  }\n\n  const item = response.data.response.body.items.item;\n\n  const fcstField = getVilageFcstField(item);\n\n  const pageDate = getVilageFcstPageDate(fcstField);\n\n  return (\n    <div>\n      <VilageFcstNavBar>\n        {pageDate.map((date) => {\n          return (\n            <Link\n              to={\"/vilage-fcst/\" + date}\n              key={date}\n              className=\"link active\"\n            >\n              {date.substr(4, 2)}월 {date.substr(6, 2)}일\n            </Link>\n          );\n        })}\n      </VilageFcstNavBar>\n      <Route\n        path=\"/vilage-fcst/:date\"\n        component={({ match }) => (\n          <VilageFcstList fcstField={fcstField} match={match} item={item} />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default VilageFcstPage;\n","import React from \"react\";\n\nconst NoMatch = () => {\n  return <div>요청 페이지를 찾을 수 없습니다.</div>;\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterBlock = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  font-size: 1rem;\n  font-weight: 700;\n  color: gray;\n  margin: 3rem 0rem;\n`;\n\nconst Footer = () => {\n  return (\n    <FooterBlock>\n      <p>부산광역시 북구 화명동 날씨</p>\n    </FooterBlock>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport ShortFcstPage from \"./views/ShortFcstPage/ShortFcstPage\";\nimport VilageFcstPage from \"./views/VilageFcstPage/VilageFcstPage\";\nimport NoMatch from \"./views/NoMatch/NoMatch\";\nimport Footer from \"./views/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={ShortFcstPage} />\n            <Route path=\"/vilage-fcst\" component={VilageFcstPage} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}